!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.mapmatch=e()}}(function(){return function e(t,r,n){function i(u,a){if(!r[u]){if(!t[u]){var s="function"==typeof require&&require;if(!a&&s)return s(u,!0);if(o)return o(u,!0);var f=new Error("Cannot find module '"+u+"'");throw f.code="MODULE_NOT_FOUND",f}var m=r[u]={exports:{}};t[u][0].call(m.exports,function(e){var r=t[u][1][e];return i(r?r:e)},m,m.exports,e,t,r,n)}return r[u].exports}for(var o="function"==typeof require&&require,u=0;u<n.length;u++)i(n[u]);return i}({1:[function(e,t){function r(){console.log("Hey")}e("geojson-tidy");t.exports.mapmatch=r},{"geojson-tidy":2}],2:[function(e,t){function r(e,t){function r(e){return JSON.parse(JSON.stringify(e))}for(var i={minimumDistance:t&&t.minimumDistance||10,minimumTime:t&&t.minimumTime||5,maximumPoints:t&&t.maximumPoints||100},o={type:"FeatureCollection",features:[]},u={type:"Feature",properties:{coordTimes:[]},geometry:{type:"LineString",coordinates:[]}},a=0;a<e.features.length;a++)if("LineString"==e.features[a].geometry.type){var s=e.features[a],f=s.geometry.coordinates,m=s.properties.coordTimes;o.features.push(r(u));for(var d=0;d<f.length;d++)if(0!==d&&d!=f.length-1){var l={latitude:f[d][1],longitude:f[d][0]},p={latitude:f[d+1][1],longitude:f[d+1][0]},c=1e3*n(l,p,{unit:"km"});if(!(c<i.minimumDistance)){if(m){var h=new Date(m[d]),g=new Date(m[d+1]),y=(g-h)/1e3;if(y<i.minimumTime)continue}o.features[o.features.length-1].geometry.coordinates.push(f[d]),m&&o.features[o.features.length-1].properties.coordTimes.push(m[d]),o.features[o.features.length-1].geometry.coordinates.length%i.maximumPoints===0&&(o.features.push(r(u)),o.features[o.features.length-1].geometry.coordinates.push(f[d]),m&&o.features[o.features.length-1].properties.coordTimes.push(m[d]))}}else o.features[o.features.length-1].geometry.coordinates.push(f[d]),m&&o.features[o.features.length-1].properties.coordTimes.push(m[d])}return JSON.stringify(o)}var n=e("haversine");t.exports.tidy=r},{haversine:3}],3:[function(e,t){var r=function(){var e=function(e){return e*Math.PI/180};return function(t,r,n){var i=6371,o=3960;n=n||{};var u="mile"===n.unit?o:i,a=e(r.latitude-t.latitude),s=e(r.longitude-t.longitude),f=e(t.latitude),m=e(r.latitude),d=Math.sin(a/2)*Math.sin(a/2)+Math.sin(s/2)*Math.sin(s/2)*Math.cos(f)*Math.cos(m),l=2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d));return n.threshold?n.threshold>u*l:u*l}}();t.exports=r},{}]},{},[1])(1)});