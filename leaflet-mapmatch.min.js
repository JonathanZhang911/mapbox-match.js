!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.mapmatch=e()}}(function(){return function e(t,n,i){function o(u,a){if(!n[u]){if(!t[u]){var s="function"==typeof require&&require;if(!a&&s)return s(u,!0);if(r)return r(u,!0);var f=new Error("Cannot find module '"+u+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[u]={exports:{}};t[u][0].call(l.exports,function(e){var n=t[u][1][e];return o(n?n:e)},l,l.exports,e,t,n,i)}return n[u].exports}for(var r="function"==typeof require&&require,u=0;u<i.length;u++)o(i[u]);return o}({1:[function(e,t){function n(e){{var t=i.tidy(e,{minimumDistance:20}),n="https://api-directions-johan-matching.tilestream.net/v4/directions/matching/mapbox.driving.json";n+"?"+L.mapbox.accessToken}console.log(t)}var i=(e("corslite"),e("geojson-tidy"));t.exports.mapmatch=n},{corslite:2,"geojson-tidy":3}],2:[function(e,t){function n(e,t,n){function i(e){return e>=200&&300>e||304===e}function o(){void 0===a.status||i(a.status)?t.call(a,null,a):t.call(a,a,null)}var r=!1;if("undefined"==typeof window.XMLHttpRequest)return t(Error("Browser not supported"));if("undefined"==typeof n){var u=e.match(/^\s*https?:\/\/[^\/]*/);n=u&&u[0]!==location.protocol+"//"+location.hostname+(location.port?":"+location.port:"")}var a=new window.XMLHttpRequest;if(n&&!("withCredentials"in a)){a=new window.XDomainRequest;var s=t;t=function(){if(r)s.apply(this,arguments);else{var e=this,t=arguments;setTimeout(function(){s.apply(e,t)},0)}}}return"onload"in a?a.onload=o:a.onreadystatechange=function(){4===a.readyState&&o()},a.onerror=function(e){t.call(this,e||!0,null),t=function(){}},a.onprogress=function(){},a.ontimeout=function(e){t.call(this,e,null),t=function(){}},a.onabort=function(e){t.call(this,e,null),t=function(){}},a.open("GET",e,!0),a.send(null),r=!0,a}"undefined"!=typeof t&&(t.exports=n)},{}],3:[function(e,t){function n(e,t){function n(e){return JSON.parse(JSON.stringify(e))}t=t||{};for(var o={minimumDistance:t.minimumDistance||10,minimumTime:t.minimumTime||5,maximumPoints:t.maximumPoints||100},r={type:"FeatureCollection",features:[]},u={type:"Feature",properties:{coordTimes:[]},geometry:{type:"LineString",coordinates:[]}},a=0;a<e.features.length;a++)if("LineString"==e.features[a].geometry.type){var s=e.features[a].geometry.coordinates,f=e.features[a].properties.coordTimes;r.features.push(n(u));for(var l=0;l<s.length;l++)if(0!==l&&l!=s.length-1){var c={latitude:s[l][1],longitude:s[l][0]},m={latitude:s[l+1][1],longitude:s[l+1][0]},d=1e3*i(c,m,{unit:"km"});if(!(d<o.minimumDistance)){if(f){var p=new Date(f[l]),h=new Date(f[l+1]),g=(h-p)/1e3;if(g<o.minimumTime)continue}r.features[r.features.length-1].geometry.coordinates.push(s[l]),f&&r.features[r.features.length-1].properties.coordTimes.push(f[l]),r.features[r.features.length-1].geometry.coordinates.length%o.maximumPoints===0&&(r.features.push(n(u)),r.features[r.features.length-1].geometry.coordinates.push(s[l]),f&&r.features[r.features.length-1].properties.coordTimes.push(f[l]))}}else r.features[r.features.length-1].geometry.coordinates.push(s[l]),f&&r.features[r.features.length-1].properties.coordTimes.push(f[l])}return JSON.stringify(r)}var i=e("haversine");t.exports.tidy=n},{haversine:4}],4:[function(e,t){var n=function(){var e=function(e){return e*Math.PI/180};return function(t,n,i){var o=6371,r=3960;i=i||{};var u="mile"===i.unit?r:o,a=e(n.latitude-t.latitude),s=e(n.longitude-t.longitude),f=e(t.latitude),l=e(n.latitude),c=Math.sin(a/2)*Math.sin(a/2)+Math.sin(s/2)*Math.sin(s/2)*Math.cos(f)*Math.cos(l),m=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c));return i.threshold?i.threshold>u*m:u*m}}();t.exports=n},{}]},{},[1])(1)});